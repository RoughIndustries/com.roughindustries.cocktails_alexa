package com.roughindustries.commonwealthcocktails.mybatis.model;

import java.util.ArrayList;
import java.util.List;

public class RecipeExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table recipe
	 * @mbggenerated  Fri May 13 13:15:11 CDT 2016
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table recipe
	 * @mbggenerated  Fri May 13 13:15:11 CDT 2016
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table recipe
	 * @mbggenerated  Fri May 13 13:15:11 CDT 2016
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table recipe
	 * @mbggenerated  Fri May 13 13:15:11 CDT 2016
	 */
	public RecipeExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table recipe
	 * @mbggenerated  Fri May 13 13:15:11 CDT 2016
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table recipe
	 * @mbggenerated  Fri May 13 13:15:11 CDT 2016
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table recipe
	 * @mbggenerated  Fri May 13 13:15:11 CDT 2016
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table recipe
	 * @mbggenerated  Fri May 13 13:15:11 CDT 2016
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table recipe
	 * @mbggenerated  Fri May 13 13:15:11 CDT 2016
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table recipe
	 * @mbggenerated  Fri May 13 13:15:11 CDT 2016
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table recipe
	 * @mbggenerated  Fri May 13 13:15:11 CDT 2016
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table recipe
	 * @mbggenerated  Fri May 13 13:15:11 CDT 2016
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table recipe
	 * @mbggenerated  Fri May 13 13:15:11 CDT 2016
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table recipe
	 * @mbggenerated  Fri May 13 13:15:11 CDT 2016
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table recipe
	 * @mbggenerated  Fri May 13 13:15:11 CDT 2016
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdrecipeIsNull() {
			addCriterion("idrecipe is null");
			return (Criteria) this;
		}

		public Criteria andIdrecipeIsNotNull() {
			addCriterion("idrecipe is not null");
			return (Criteria) this;
		}

		public Criteria andIdrecipeEqualTo(Integer value) {
			addCriterion("idrecipe =", value, "idrecipe");
			return (Criteria) this;
		}

		public Criteria andIdrecipeNotEqualTo(Integer value) {
			addCriterion("idrecipe <>", value, "idrecipe");
			return (Criteria) this;
		}

		public Criteria andIdrecipeGreaterThan(Integer value) {
			addCriterion("idrecipe >", value, "idrecipe");
			return (Criteria) this;
		}

		public Criteria andIdrecipeGreaterThanOrEqualTo(Integer value) {
			addCriterion("idrecipe >=", value, "idrecipe");
			return (Criteria) this;
		}

		public Criteria andIdrecipeLessThan(Integer value) {
			addCriterion("idrecipe <", value, "idrecipe");
			return (Criteria) this;
		}

		public Criteria andIdrecipeLessThanOrEqualTo(Integer value) {
			addCriterion("idrecipe <=", value, "idrecipe");
			return (Criteria) this;
		}

		public Criteria andIdrecipeIn(List<Integer> values) {
			addCriterion("idrecipe in", values, "idrecipe");
			return (Criteria) this;
		}

		public Criteria andIdrecipeNotIn(List<Integer> values) {
			addCriterion("idrecipe not in", values, "idrecipe");
			return (Criteria) this;
		}

		public Criteria andIdrecipeBetween(Integer value1, Integer value2) {
			addCriterion("idrecipe between", value1, value2, "idrecipe");
			return (Criteria) this;
		}

		public Criteria andIdrecipeNotBetween(Integer value1, Integer value2) {
			addCriterion("idrecipe not between", value1, value2, "idrecipe");
			return (Criteria) this;
		}

		public Criteria andRecipeCocktailIsNull() {
			addCriterion("recipe_cocktail is null");
			return (Criteria) this;
		}

		public Criteria andRecipeCocktailIsNotNull() {
			addCriterion("recipe_cocktail is not null");
			return (Criteria) this;
		}

		public Criteria andRecipeCocktailEqualTo(Integer value) {
			addCriterion("recipe_cocktail =", value, "recipeCocktail");
			return (Criteria) this;
		}

		public Criteria andRecipeCocktailNotEqualTo(Integer value) {
			addCriterion("recipe_cocktail <>", value, "recipeCocktail");
			return (Criteria) this;
		}

		public Criteria andRecipeCocktailGreaterThan(Integer value) {
			addCriterion("recipe_cocktail >", value, "recipeCocktail");
			return (Criteria) this;
		}

		public Criteria andRecipeCocktailGreaterThanOrEqualTo(Integer value) {
			addCriterion("recipe_cocktail >=", value, "recipeCocktail");
			return (Criteria) this;
		}

		public Criteria andRecipeCocktailLessThan(Integer value) {
			addCriterion("recipe_cocktail <", value, "recipeCocktail");
			return (Criteria) this;
		}

		public Criteria andRecipeCocktailLessThanOrEqualTo(Integer value) {
			addCriterion("recipe_cocktail <=", value, "recipeCocktail");
			return (Criteria) this;
		}

		public Criteria andRecipeCocktailIn(List<Integer> values) {
			addCriterion("recipe_cocktail in", values, "recipeCocktail");
			return (Criteria) this;
		}

		public Criteria andRecipeCocktailNotIn(List<Integer> values) {
			addCriterion("recipe_cocktail not in", values, "recipeCocktail");
			return (Criteria) this;
		}

		public Criteria andRecipeCocktailBetween(Integer value1, Integer value2) {
			addCriterion("recipe_cocktail between", value1, value2, "recipeCocktail");
			return (Criteria) this;
		}

		public Criteria andRecipeCocktailNotBetween(Integer value1, Integer value2) {
			addCriterion("recipe_cocktail not between", value1, value2, "recipeCocktail");
			return (Criteria) this;
		}

		public Criteria andRecipeIngredientIsNull() {
			addCriterion("recipe_ingredient is null");
			return (Criteria) this;
		}

		public Criteria andRecipeIngredientIsNotNull() {
			addCriterion("recipe_ingredient is not null");
			return (Criteria) this;
		}

		public Criteria andRecipeIngredientEqualTo(Integer value) {
			addCriterion("recipe_ingredient =", value, "recipeIngredient");
			return (Criteria) this;
		}

		public Criteria andRecipeIngredientNotEqualTo(Integer value) {
			addCriterion("recipe_ingredient <>", value, "recipeIngredient");
			return (Criteria) this;
		}

		public Criteria andRecipeIngredientGreaterThan(Integer value) {
			addCriterion("recipe_ingredient >", value, "recipeIngredient");
			return (Criteria) this;
		}

		public Criteria andRecipeIngredientGreaterThanOrEqualTo(Integer value) {
			addCriterion("recipe_ingredient >=", value, "recipeIngredient");
			return (Criteria) this;
		}

		public Criteria andRecipeIngredientLessThan(Integer value) {
			addCriterion("recipe_ingredient <", value, "recipeIngredient");
			return (Criteria) this;
		}

		public Criteria andRecipeIngredientLessThanOrEqualTo(Integer value) {
			addCriterion("recipe_ingredient <=", value, "recipeIngredient");
			return (Criteria) this;
		}

		public Criteria andRecipeIngredientIn(List<Integer> values) {
			addCriterion("recipe_ingredient in", values, "recipeIngredient");
			return (Criteria) this;
		}

		public Criteria andRecipeIngredientNotIn(List<Integer> values) {
			addCriterion("recipe_ingredient not in", values, "recipeIngredient");
			return (Criteria) this;
		}

		public Criteria andRecipeIngredientBetween(Integer value1, Integer value2) {
			addCriterion("recipe_ingredient between", value1, value2, "recipeIngredient");
			return (Criteria) this;
		}

		public Criteria andRecipeIngredientNotBetween(Integer value1, Integer value2) {
			addCriterion("recipe_ingredient not between", value1, value2, "recipeIngredient");
			return (Criteria) this;
		}

		public Criteria andRecipeDozeIsNull() {
			addCriterion("recipe_doze is null");
			return (Criteria) this;
		}

		public Criteria andRecipeDozeIsNotNull() {
			addCriterion("recipe_doze is not null");
			return (Criteria) this;
		}

		public Criteria andRecipeDozeEqualTo(Float value) {
			addCriterion("recipe_doze =", value, "recipeDoze");
			return (Criteria) this;
		}

		public Criteria andRecipeDozeNotEqualTo(Float value) {
			addCriterion("recipe_doze <>", value, "recipeDoze");
			return (Criteria) this;
		}

		public Criteria andRecipeDozeGreaterThan(Float value) {
			addCriterion("recipe_doze >", value, "recipeDoze");
			return (Criteria) this;
		}

		public Criteria andRecipeDozeGreaterThanOrEqualTo(Float value) {
			addCriterion("recipe_doze >=", value, "recipeDoze");
			return (Criteria) this;
		}

		public Criteria andRecipeDozeLessThan(Float value) {
			addCriterion("recipe_doze <", value, "recipeDoze");
			return (Criteria) this;
		}

		public Criteria andRecipeDozeLessThanOrEqualTo(Float value) {
			addCriterion("recipe_doze <=", value, "recipeDoze");
			return (Criteria) this;
		}

		public Criteria andRecipeDozeIn(List<Float> values) {
			addCriterion("recipe_doze in", values, "recipeDoze");
			return (Criteria) this;
		}

		public Criteria andRecipeDozeNotIn(List<Float> values) {
			addCriterion("recipe_doze not in", values, "recipeDoze");
			return (Criteria) this;
		}

		public Criteria andRecipeDozeBetween(Float value1, Float value2) {
			addCriterion("recipe_doze between", value1, value2, "recipeDoze");
			return (Criteria) this;
		}

		public Criteria andRecipeDozeNotBetween(Float value1, Float value2) {
			addCriterion("recipe_doze not between", value1, value2, "recipeDoze");
			return (Criteria) this;
		}

		public Criteria andRecipeCardinalIsNull() {
			addCriterion("recipe_cardinal is null");
			return (Criteria) this;
		}

		public Criteria andRecipeCardinalIsNotNull() {
			addCriterion("recipe_cardinal is not null");
			return (Criteria) this;
		}

		public Criteria andRecipeCardinalEqualTo(Integer value) {
			addCriterion("recipe_cardinal =", value, "recipeCardinal");
			return (Criteria) this;
		}

		public Criteria andRecipeCardinalNotEqualTo(Integer value) {
			addCriterion("recipe_cardinal <>", value, "recipeCardinal");
			return (Criteria) this;
		}

		public Criteria andRecipeCardinalGreaterThan(Integer value) {
			addCriterion("recipe_cardinal >", value, "recipeCardinal");
			return (Criteria) this;
		}

		public Criteria andRecipeCardinalGreaterThanOrEqualTo(Integer value) {
			addCriterion("recipe_cardinal >=", value, "recipeCardinal");
			return (Criteria) this;
		}

		public Criteria andRecipeCardinalLessThan(Integer value) {
			addCriterion("recipe_cardinal <", value, "recipeCardinal");
			return (Criteria) this;
		}

		public Criteria andRecipeCardinalLessThanOrEqualTo(Integer value) {
			addCriterion("recipe_cardinal <=", value, "recipeCardinal");
			return (Criteria) this;
		}

		public Criteria andRecipeCardinalIn(List<Integer> values) {
			addCriterion("recipe_cardinal in", values, "recipeCardinal");
			return (Criteria) this;
		}

		public Criteria andRecipeCardinalNotIn(List<Integer> values) {
			addCriterion("recipe_cardinal not in", values, "recipeCardinal");
			return (Criteria) this;
		}

		public Criteria andRecipeCardinalBetween(Integer value1, Integer value2) {
			addCriterion("recipe_cardinal between", value1, value2, "recipeCardinal");
			return (Criteria) this;
		}

		public Criteria andRecipeCardinalNotBetween(Integer value1, Integer value2) {
			addCriterion("recipe_cardinal not between", value1, value2, "recipeCardinal");
			return (Criteria) this;
		}

		public Criteria andRecipeOrdinalIsNull() {
			addCriterion("recipe_ordinal is null");
			return (Criteria) this;
		}

		public Criteria andRecipeOrdinalIsNotNull() {
			addCriterion("recipe_ordinal is not null");
			return (Criteria) this;
		}

		public Criteria andRecipeOrdinalEqualTo(Integer value) {
			addCriterion("recipe_ordinal =", value, "recipeOrdinal");
			return (Criteria) this;
		}

		public Criteria andRecipeOrdinalNotEqualTo(Integer value) {
			addCriterion("recipe_ordinal <>", value, "recipeOrdinal");
			return (Criteria) this;
		}

		public Criteria andRecipeOrdinalGreaterThan(Integer value) {
			addCriterion("recipe_ordinal >", value, "recipeOrdinal");
			return (Criteria) this;
		}

		public Criteria andRecipeOrdinalGreaterThanOrEqualTo(Integer value) {
			addCriterion("recipe_ordinal >=", value, "recipeOrdinal");
			return (Criteria) this;
		}

		public Criteria andRecipeOrdinalLessThan(Integer value) {
			addCriterion("recipe_ordinal <", value, "recipeOrdinal");
			return (Criteria) this;
		}

		public Criteria andRecipeOrdinalLessThanOrEqualTo(Integer value) {
			addCriterion("recipe_ordinal <=", value, "recipeOrdinal");
			return (Criteria) this;
		}

		public Criteria andRecipeOrdinalIn(List<Integer> values) {
			addCriterion("recipe_ordinal in", values, "recipeOrdinal");
			return (Criteria) this;
		}

		public Criteria andRecipeOrdinalNotIn(List<Integer> values) {
			addCriterion("recipe_ordinal not in", values, "recipeOrdinal");
			return (Criteria) this;
		}

		public Criteria andRecipeOrdinalBetween(Integer value1, Integer value2) {
			addCriterion("recipe_ordinal between", value1, value2, "recipeOrdinal");
			return (Criteria) this;
		}

		public Criteria andRecipeOrdinalNotBetween(Integer value1, Integer value2) {
			addCriterion("recipe_ordinal not between", value1, value2, "recipeOrdinal");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table recipe
	 * @mbggenerated  Fri May 13 13:15:11 CDT 2016
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table recipe
     *
     * @mbggenerated do_not_delete_during_merge Fri May 13 12:51:23 CDT 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}